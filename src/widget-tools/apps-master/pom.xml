<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

	<groupId>org.ogema.apps</groupId>
    <artifactId>apps-master</artifactId>
	<version>2.2.1</version>
    <packaging>pom</packaging>
   	<url>http://ogema.org</url>
    <name>Parent pom for OGEMA apps</name>
    <description>Parent pom for OGEMA apps</description>
    
    <licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:git://github.com/ogema/ogema-widgets.git</connection>
		<developerConnection>scm:git:git://github.com/ogema/ogema-widgets.git</developerConnection>
		<url>https://github.com/ogema/ogema-widgets</url>
		<tag>ogema-widgets-2.2.1</tag>
	</scm>
	
	<developers>
		<developer>
			<id>cnoelle</id>
			<name>Christoph NÃ¶lle</name>
			<organization>Fraunhofer</organization>
			<organizationUrl>https://www.iee.fraunhofer.de/</organizationUrl>
		</developer>
		<developer>
			<id>jlapp</id>
			<name>Jan Lapp</name>
			<organization>Fraunhofer</organization>
			<organizationUrl>https://www.iee.fraunhofer.de/</organizationUrl>
		</developer>
		<developer>
			<id>dnestle</id>
			<name>David Nestle</name>
			<organization>Fraunhofer</organization>
			<organizationUrl>https://www.iee.fraunhofer.de/</organizationUrl>
		</developer>
	</developers>
	
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven-source-plugin.version>3.0.1</maven-source-plugin.version>
		<maven-javadoc-plugin.version>3.0.1</maven-javadoc-plugin.version>
		<osgi.version>5.0.0</osgi.version>
		<ogema.api.version>2.2.1-SNAPSHOT</ogema.api.version>
		<models.proposed.version>2.1.2</models.proposed.version>
		<ogema.widgets.version>2.2.1-SNAPSHOT</ogema.widgets.version>
		<ogema.simulation.version>2.2.1-SNAPSHOT</ogema.simulation.version>
		<jackson.version>2.11.0</jackson.version>
		<slf4j.version>1.7.2</slf4j.version>
		<!-- max versions exclusive -->
		<guava.version.min>19.0</guava.version.min>
		<guava.version.max>28.0</guava.version.max>
		<felix.service.command.version.min>0.0.0</felix.service.command.version.min>
		<felix.service.command.version.max>2.0.0</felix.service.command.version.max>
		<lang3.version.min>3.4</lang3.version.min>
		<lang3.version.max>4.0</lang3.version.max>
		<org.json.version.min>20160212</org.json.version.min>
		<org.json.version.max>20180814</org.json.version.max>
	</properties>
   
   	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<dependencyManagement>
		<dependencies>
		
			<!-- OSGi -->
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>${osgi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.compendium</artifactId>
				<version>${osgi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.scr.annotations</artifactId>
				<version>1.9.12</version>
			</dependency>
			
			<!-- Logging -->
			<dependency>					
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- OGEMA API -->
			<dependency>
				<groupId>org.ogema.core</groupId>
				<artifactId>api</artifactId>
				<version>${ogema.api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ogema.core</groupId>
				<artifactId>models</artifactId>
				<version>${ogema.api.version}</version>
			</dependency>
			<!-- OGEMA test base -->
			<dependency>
				<groupId>org.ogema.ref-impl</groupId>
				<artifactId>ogema-exam-base</artifactId>
				<version>${ogema.api.version}</version>
			</dependency>
			<!-- OGEMA Tools and Services -->
			<dependency>
				<groupId>org.ogema.tools</groupId>
				<artifactId>memory-timeseries</artifactId>
				<version>${ogema.api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ogema.tools</groupId>
				<artifactId>resource-manipulators</artifactId>
				<version>${ogema.api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ogema.tools</groupId>
				<artifactId>resource-utils</artifactId>
				<version>${ogema.api.version}</version> 
			</dependency>
			<!-- proposed models -->

			<!-- OGEMA widget framework -->
			<dependency>
	            <groupId>org.ogema.widgets</groupId>
	            <artifactId>ogema-gui-api</artifactId>
	            <version>${ogema.widgets.version}</version>
        	</dependency>
        	<dependency>
	            <groupId>org.ogema.widgets</groupId>
	            <artifactId>ogema-js-bundle</artifactId>
	            <version>${ogema.widgets.version}</version>
        	</dependency>
        	<dependency>
	            <groupId>org.ogema.widgets</groupId>
	            <artifactId>widget-collection</artifactId>
	            <version>${ogema.widgets.version}</version>
        	</dependency>
        	<dependency>
	            <groupId>org.ogema.widgets</groupId>
	            <artifactId>widget-extended</artifactId>
	            <version>${ogema.widgets.version}</version>
        	</dependency>
        	<dependency>
	            <groupId>org.ogema.widgets</groupId>
	            <artifactId>widget-experimental</artifactId>
	            <version>${ogema.widgets.version}</version>
        	</dependency>
        	<dependency>
	            <groupId>de.iwes.tools</groupId>
	            <artifactId>standard-patterns</artifactId>
	            <version>${ogema.widgets.version}</version>
        	</dependency>
			<!-- Simulation service -->
			<dependency>
	            <groupId>org.ogema.apps</groupId>
	            <artifactId>simulation-service</artifactId>
	            <version>${ogema.simulation.version}</version>
        	</dependency>
        	<dependency>
	            <groupId>de.iwes.sim</groupId>
	            <artifactId>roomsimulation-service</artifactId>
	            <version>${ogema.simulation.version}</version>
        	</dependency>
			<!-- Widgets test base -->
			<dependency>
				<groupId>org.ogema.widgets</groupId>
				<artifactId>widget-exam-base</artifactId>
				<version>${ogema.widgets.version}</version>
			</dependency>
			
			<!-- Others -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.1.0</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>23.0</version>
			</dependency>
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>20170516</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.module</groupId>
				<artifactId>jackson-module-jaxb-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			
		</dependencies>
	</dependencyManagement>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.servicemix.tooling</groupId>
				<artifactId>depends-maven-plugin</artifactId>
				<version>1.3.1</version>
				<executions>
					<execution>
						<id>generate-depends-file</id>
						<goals>
							<goal>generate-depends-file</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!-- execution order: run scr before manifest and manifest before tests, 
					so that pax exam can use the manifest -->
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-scr-plugin</artifactId>
					<version>1.26.0</version>
					<configuration>
						<outputDirectory>${project.build.outputDirectory}</outputDirectory>
					</configuration>
					<executions>
						<execution>
							<id>generate-scr-scrdescriptor</id>
							<phase>process-classes</phase>
							<goals>
								<goal>scr</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<extensions>true</extensions>
					<version>4.0.0</version>
					<executions>
						<execution>
							<id>bundle-manifest</id>
							<phase>generate-test-sources</phase>
							<goals>
								<goal>manifest</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
						<showDeprecation>true</showDeprecation>
						<showWarnings>true</showWarnings>
						<compilerArgs>
							<arg>-Xlint</arg>
						</compilerArgs>
					</configuration>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.felix</groupId>
										<artifactId>maven-scr-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>scr</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>true</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>

								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.felix</groupId>
										<artifactId>maven-bundle-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>generate-test-sources</goal>
											<goal>manifest</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>true</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>

								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.servicemix.tooling</groupId>
										<artifactId>depends-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>generate-depends-file</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>

								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.googlecode.maven-java-formatter-plugin</groupId>
										<artifactId>maven-java-formatter-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>format</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>

								<!-- license-maven-plugin shouldn't be executed from eclipse-mvn 
									build -> start from console explicitly if needed: mvn find:find license:format 
									OR mvn license:format -Dlicense.header=path/to/header.txt -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.mycila</groupId>
										<artifactId>license-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>check</goal>
											<goal>format</goal>
											<goal>remove</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>

							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.googlecode.maven-java-formatter-plugin</groupId>
					<artifactId>maven-java-formatter-plugin</artifactId>
					<version>0.4</version>
					<configuration>
						<configFile>${format.file}</configFile>
						<encoding>UTF-8</encoding>
						<lineEnding>LF</lineEnding>
						<excludes>
							<exclude>**/src/test/**</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>format</goal>
							</goals>
							<phase>validate</phase>
						</execution>
					</executions>
				</plugin>

				<!-- Plugin for automatic addition of header to java, html, jsp, .. files. -->
				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>2.11</version>
					<configuration>
                        <!-- see 'mvn com.mycila:license-maven-plugin:help -Ddetail=true' -->
						<header>${license.header}</header>
                        <keywords> <!-- existing license headers contain all of these keywords -->
                            <keyword>OGEMA</keyword>
                            <keyword>GNU</keyword>
                            <keyword>License</keyword>
                        </keywords>
						<properties>
							<year>2018</year>
							<email>info@ogema.org</email>
						</properties>
						<!-- Encoding is actually unused, see http://code.google.com/p/license-maven-plugin/issues/detail?id=115 
							which is not yet patched in the released versions (up to 1.10.0b1). The license 
							plugin will always use the platform encoding when reading the license file, 
							which is usually cp1251 on windows. To override the platform encoding used 
							in maven the system property 'file.encoding' must be set in the environment 
							variable JAVA_TOOL_OPTIONS. set JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF-8 -->
						<encoding>UTF-8</encoding>

						<includes>
							<include>src/**</include>
							<include>web/**</include>
						</includes>
						<excludes>
							<exclude>lib/**</exclude>
							<exclude>libs/**</exclude>
							<exclude>target/**</exclude>
							<exclude>**/*.txt</exclude>
							<exclude>**/data/**</exclude>
							<exclude>**/MANIFEST.MF</exclude>
							<exclude>**/.project</exclude>
							<exclude>**/.settings</exclude>
							<exclude>**/.classpath</exclude>
							<exclude>**/*.log</exclude>
							<exclude>**/jquery*.js</exclude>
							<!-- comment out to include javascript files; take care not to add license headers to external js libs -->
							<exclude>**/*.js</exclude>
							<exclude>**/*.json</exclude>
							<exclude>**/*.map</exclude>
							<exclude>**/*.css</exclude>
							<exclude>**/*.psd</exclude>
							<exclude>**/*.mp4</exclude>
							<exclude>**/*.csv</exclude>
							<exclude>**/*.svg</exclude>
							<exclude>**/*.ini</exclude>
							<exclude>**/*.properties</exclude>
							<exclude>**/*.uml</exclude>
							<exclude>**/*.umlcd</exclude>
							<exclude>**/*.eot</exclude>
							<exclude>**/*.ttf</exclude>
							<exclude>**/*.woff</exclude>
						</excludes>
						<useDefaultExcludes>true</useDefaultExcludes>
						<strictCheck>true</strictCheck>
						<failIfMissing>true</failIfMissing>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>format</goal>
							</goals>
							<!-- don't execute this plugin automatically -> need to be invoked 
								explicitly: mvn license:[goal] [goal] := check, format or remove -->
							<phase>validate</phase>
						</execution>
					</executions>
				</plugin>

				<!-- Source Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Javadoc Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.6</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.19.1</version>
					<configuration>
						<argLine>-ea</argLine>
					</configuration>
				</plugin>
				<!-- Release Plugin -->
				<!-- Usage: 1. mvn release:prepare -Prelease-prepare 2. mvn release:perform 
					-Dgoals'deploy -f src/pom.xml' NOTE: unfortunately the attribute pomFileName 
					is ignored in mvn 3.0.5 and/or release-plugin version 2.5.1 so using profile 
					-Prelease-perform isn't working yet ... alternatively (with dryRun): mvn 
					release:prepare -Prelease-prepare -DdryRun=true mvn release:clean -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
  <profiles>
<!-- 
	    <profile>
	        <id>disable-java8-doclint</id>
	        <activation>
	            <jdk>[1.8,)</jdk>
	        </activation>
	        <properties>
	            <additionalparam>-Xdoclint:none</additionalparam>
	        </properties>
	    </profile>
-->
		<!-- maven-release-plugin profiles -->
		<!-- Usage: 1. mvn release:prepare -Prelease-prepare 2. mvn release:perform 
			-Dgoals'deploy -f src/pom.xml' -->
		<profile>
			<id>release-prepare</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
						<configuration>
							<arguments>-DskipTests</arguments>
							<preparationGoals>clean install</preparationGoals>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release-perform</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
						<configuration>
							<pomFileName>src/pom.xml</pomFileName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Sign and deploy locally, for testing. Usage: mvn -Psign install -DskipTests 
			-o -->
		<profile>
			<id>sign</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- Generate source, javadoc, sign and deploy. Usage: 
				mvn -Psign-and-deploy deploy -DskipTests -Ddoclint=none -->
			<id>sign-and-deploy</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
